#配置服务端口
server:
  port: 9001

spring:
  application:
    name: edu-gateway-boot #应用名称，会在Eureka中作为服务的id标识(serviceId)
  cloud: #配置网关
    gateway:
      routes: #配置路由
        - id: edu-routes-ad
          uri: lb://edu-ad-boot #动态路由：从注册中心获取对应服务的实例
          predicates: #当断言成功后，交给某一个微服务处理时，使用的是转发
            - Path=/ad/**
          filters:
              # http://127.0.0.1:9001/ad/service/port --> /service/port 访问请求中加上ad是为了满足断言
            - StripPrefix=1 # 断言成功后，交给具体的uri所对应的微服务处理，将uri中的第一个参数去掉，
            # 即为：http://127.0.0.1:9001/service/port

#配置Eureka注册中心
eureka:
  client:
    service-url: #定义Eureka server url
      defaultZone: http://localhost:7001/eureka
    register-with-eureka: true #表示是否向Eureka中心注册自己的信息，因为自己就是Eureka server,所以不需要注册，默认为true
    fetch-registry: true #是否查询/拉取Eureka server服务注册列表，默认为true
  instance:
    #hostname: localhost #当前Eureka实例的主机名
    #使用ip注册，否则会使用主机名注册了（此处考虑到对老版本的兼容，新版本经过实验都是ip）
    prefer-ip-address: true
    #自定义实例显示格式，加上版本号，便于多版本管理，注意是ip-address，早期版本是ipAddress
    instance-id: ${spring.cloud.client.ip-address}:${spring.application.name}:${server.port}:@project.version@
